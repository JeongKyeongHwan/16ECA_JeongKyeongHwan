Q 01 traffic card module 를 이용하여 여러장의 교통 카드를 만드는 것이 가능한가?




답안 : 불가능하다. 실제로 실습 프로그램에 넣어서 실행해 보면 

        my_card.check() = your_card.check() 즉, 서로 같은 카드임을 알 수 있다.


 

Q 02 & 03 traffic card module 에는 전역 변수 balance_won 이 있는데, 해당 모듈을 사용하는 프로그램에서 이 변수를 직접 읽거나 변경하게 하는 것이 가능한가?




답안 : 불가능하다. 해당 모듈을 import 한 프로그램에서 'balance_won'을 읽거나 변형시려고 하면

         'balance_won'이 정의되지 않았다는 오류 메시지가 출력된다.



Q 04 객체 지향 프로그램에서 "캡슐화" 에 대해 설명하시오


[encapsulation] : 객체지향프로그래밍에서의 중요한 특징 중 하나로, 연관된 데이터와 함수를 논리적으로 묶어놓은 것이며,
데이터를 보호하기 위해 다른 객체의 접근을 제한하는 접근 제한 수식자의 기능을 제공한다.

ex) 컴퓨터 모니터는 여러가지 부품들을 조합에서 만든다. 
하지만 부품을 일일이 노출되거나 분해하지 않더라도 모니터로써 사용이 가능하다.


Q 05 객체 지향 프로그램에서 "상속성" 에 대해 설명하시오


하나의 객체 특징을 다른 객체에게 전달하는것.

ex) 컴퓨터 본체는 모니터, 키보드, 마우스 등 여러가지 다른 객체의 특징을 전달(상속)받아서 사용 할 수 있다.



Q 06 traffic card module 이나 TrafficCardClass 에서는 잔고가 0 이하로 내려가는 것을 막을 수 있는가?


 막을 수 있다.
 

Q 07 잔고가 0으로 내려 가지 않는 기능을 추가하기 위해 어떤 조치가 취해 졌는가?


 오류를 만들어서 예외처리를 해주면 된다.


[참고문헌]
캡슐화 - 두산백과, http://www.doopedia.co.kr/search/encyber/new_totalSearch.jsp
상속성, http://cafe.naver.com/cmenia/460
 	